name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Build
      run: go build -v .
    
    - name: Test binary
      run: |
        # Test help output
        ./tiv --help
        
        # Test version info
        ./tiv --version || echo "Version flag not implemented yet"
    
    - name: Run linting
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --out-format=colored-line-number --timeout=5m

  build-matrix:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21
    
    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        if [ "${{ matrix.goos }}" = "windows" ]; then
          BINARY_NAME="tiv-${{ matrix.goos }}-${{ matrix.goarch }}.exe"
        else
          BINARY_NAME="tiv-${{ matrix.goos }}-${{ matrix.goarch }}"
        fi
        go build -ldflags "-s -w" -o "$BINARY_NAME" .
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: tiv-${{ matrix.goos }}-${{ matrix.goarch }}
        path: tiv-* 